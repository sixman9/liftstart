// Minimal build.gradle for Lift project
apply {
    plugin 'scala'
    plugin 'war'
    plugin 'jetty'
    plugin 'eclipse'
    plugin 'idea'
}

scalaVersion = '2.9.1'
liftVersion = '2.4-M4'
specsVersion = "1.6.9"

jettyRun.contextPath = "/"

repositories {
    mavenCentral()
    mavenRepo name:'scala-releases', url:'http://scala-tools.org/repo-releases/'
    mavenRepo name:'scala-snapshots', url:'http://scala-tools.org/repo-snapshots/'
}

dependencies {
    scalaTools "org.scala-lang:scala-compiler:$scalaVersion", 
        "org.scala-lang:scala-library:$scalaVersion"    

    compile "org.scala-lang:scala-library:$scalaVersion", 
    	"net.liftweb:lift-mapper_$scalaVersion:$liftVersion", 
    	"net.liftweb:lift-webkit_$scalaVersion:$liftVersion",
    	"net.liftweb:lift-util_$scalaVersion:$liftVersion",
    	"net.liftweb:lift-actor_$scalaVersion:$liftVersion",
    	"net.liftweb:lift-common_$scalaVersion:$liftVersion",
    	"net.liftweb:lift-json_$scalaVersion:$liftVersion", 
        "ch.qos.logback:logback-classic:0.9.29",
        "ch.qos.logback:logback-core:0.9.29",
        "com.h2database:h2:1.3.155"

    testCompile "junit:junit:4.5", 
        "org.scala-tools.testing:specs_$scalaVersion:$specsVersion",
        "org.scala-lang:scala-compiler:$scalaVersion",
        'org.mortbay.jetty:jetty:6.1.25',
        'org.mortbay.jetty:jetty-util:6.1.25',
        'org.mortbay.jetty:jetty-management:6.1.25',
	"org.scala-lang:scala-compiler:$scalaVersion"  // Needed for LiftConsole	

    providedCompile 'javax.servlet:servlet-api:2.5' 
}

// if you want to use the gradle wrapper
task('wrapper', type: Wrapper).configure {
    gradleVersion = '1.0-milestone-6'
}

/*
def versionCompatibility = 1.6

eclipse {
	project {
		comment = ""

		buildCommand "org.eclipse.jdt.core.javabuilder"

	        natures	"com.springsource.sts.gradle.core.nature",
			"ch.epfl.lamp.sdt.core.scalanature",
			"org.eclipse.jdt.core.javanature"
			//"com.springsource.sts.grails.core.nature",
			//"org.eclipse.jdt.groovy.core.groovyNature",
	}

	classpath {
        	containers "com.springsource.sts.gradle.classpathcontainer"
	}
}

idea {
	project {
        	jdkName = versionCompatibility

		ipr {
        		withXml { provider ->
            		def node = provider.asNode()
			
            		// Set Gradle home
            		def gradleSettings = node.appendNode('component', [name: 'GradleSettings'])
            		gradleSettings.appendNode('option', [name: 'SDK_HOME', value: gradle.gradleHomeDir])

			// Code formatting options
				def codeFormatSettings = new XmlParser().parseText('''
			  <component name="CodeStyleSettingsManager">
			    <option name="PER_PROJECT_SETTINGS">
			      <value>
				<option name="USE_SAME_INDENTS" value="true" />
				<option name="RIGHT_MARGIN" value="200" />
				<option name="JD_ALIGN_PARAM_COMMENTS" value="false" />
				<option name="JD_ALIGN_EXCEPTION_COMMENTS" value="false" />
				<option name="JD_P_AT_EMPTY_LINES" value="false" />
				<option name="JD_KEEP_EMPTY_PARAMETER" value="false" />
				<option name="JD_KEEP_EMPTY_EXCEPTION" value="false" />
				<option name="JD_KEEP_EMPTY_RETURN" value="false" />
				<option name="WRAP_COMMENTS" value="true" />
				<option name="IF_BRACE_FORCE" value="3" />
				<option name="DOWHILE_BRACE_FORCE" value="3" />
				<option name="WHILE_BRACE_FORCE" value="3" />
				<option name="FOR_BRACE_FORCE" value="3" />
				<ADDITIONAL_INDENT_OPTIONS fileType="groovy">
				  <option name="INDENT_SIZE" value="2" />
				  <option name="CONTINUATION_INDENT_SIZE" value="8" />
				  <option name="TAB_SIZE" value="4" />
				  <option name="USE_TAB_CHARACTER" value="false" />
				  <option name="SMART_TABS" value="false" />
				  <option name="LABEL_INDENT_SIZE" value="0" />
				  <option name="LABEL_INDENT_ABSOLUTE" value="false" />
				  <option name="USE_RELATIVE_INDENTS" value="false" />
				</ADDITIONAL_INDENT_OPTIONS>
				<ADDITIONAL_INDENT_OPTIONS fileType="java">
				  <option name="INDENT_SIZE" value="4" />
				  <option name="CONTINUATION_INDENT_SIZE" value="8" />
				  <option name="TAB_SIZE" value="4" />
				  <option name="USE_TAB_CHARACTER" value="false" />
				  <option name="SMART_TABS" value="false" />
				  <option name="LABEL_INDENT_SIZE" value="0" />
				  <option name="LABEL_INDENT_ABSOLUTE" value="false" />
				  <option name="USE_RELATIVE_INDENTS" value="false" />
				</ADDITIONAL_INDENT_OPTIONS>
				<ADDITIONAL_INDENT_OPTIONS fileType="js">
				  <option name="INDENT_SIZE" value="4" />
				  <option name="CONTINUATION_INDENT_SIZE" value="8" />
				  <option name="TAB_SIZE" value="4" />
				  <option name="USE_TAB_CHARACTER" value="false" />
				  <option name="SMART_TABS" value="false" />
				  <option name="LABEL_INDENT_SIZE" value="0" />
				  <option name="LABEL_INDENT_ABSOLUTE" value="false" />
				  <option name="USE_RELATIVE_INDENTS" value="false" />
				</ADDITIONAL_INDENT_OPTIONS>
				<ADDITIONAL_INDENT_OPTIONS fileType="jsp">
				  <option name="INDENT_SIZE" value="4" />
				  <option name="CONTINUATION_INDENT_SIZE" value="8" />
				  <option name="TAB_SIZE" value="4" />
				  <option name="USE_TAB_CHARACTER" value="false" />
				  <option name="SMART_TABS" value="false" />
				  <option name="LABEL_INDENT_SIZE" value="0" />
				  <option name="LABEL_INDENT_ABSOLUTE" value="false" />
				  <option name="USE_RELATIVE_INDENTS" value="false" />
				</ADDITIONAL_INDENT_OPTIONS>
				<ADDITIONAL_INDENT_OPTIONS fileType="php">
				  <option name="INDENT_SIZE" value="4" />
				  <option name="CONTINUATION_INDENT_SIZE" value="8" />
				  <option name="TAB_SIZE" value="4" />
				  <option name="USE_TAB_CHARACTER" value="false" />
				  <option name="SMART_TABS" value="false" />
				  <option name="LABEL_INDENT_SIZE" value="0" />
				  <option name="LABEL_INDENT_ABSOLUTE" value="false" />
				  <option name="USE_RELATIVE_INDENTS" value="false" />
				</ADDITIONAL_INDENT_OPTIONS>
				<ADDITIONAL_INDENT_OPTIONS fileType="scala">
				  <option name="INDENT_SIZE" value="2" />
				  <option name="CONTINUATION_INDENT_SIZE" value="2" />
				  <option name="TAB_SIZE" value="2" />
				  <option name="USE_TAB_CHARACTER" value="false" />
				  <option name="SMART_TABS" value="false" />
				  <option name="LABEL_INDENT_SIZE" value="0" />
				  <option name="LABEL_INDENT_ABSOLUTE" value="false" />
				  <option name="USE_RELATIVE_INDENTS" value="false" />
				</ADDITIONAL_INDENT_OPTIONS>
				<ADDITIONAL_INDENT_OPTIONS fileType="sql">
				  <option name="INDENT_SIZE" value="2" />
				  <option name="CONTINUATION_INDENT_SIZE" value="8" />
				  <option name="TAB_SIZE" value="4" />
				  <option name="USE_TAB_CHARACTER" value="false" />
				  <option name="SMART_TABS" value="false" />
				  <option name="LABEL_INDENT_SIZE" value="0" />
				  <option name="LABEL_INDENT_ABSOLUTE" value="false" />
				  <option name="USE_RELATIVE_INDENTS" value="false" />
				</ADDITIONAL_INDENT_OPTIONS>
				<ADDITIONAL_INDENT_OPTIONS fileType="xml">
				  <option name="INDENT_SIZE" value="4" />
				  <option name="CONTINUATION_INDENT_SIZE" value="8" />
				  <option name="TAB_SIZE" value="4" />
				  <option name="USE_TAB_CHARACTER" value="false" />
				  <option name="SMART_TABS" value="false" />
				  <option name="LABEL_INDENT_SIZE" value="0" />
				  <option name="LABEL_INDENT_ABSOLUTE" value="false" />
				  <option name="USE_RELATIVE_INDENTS" value="false" />
				</ADDITIONAL_INDENT_OPTIONS>
			      </value>
			    </option>
			    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
			  </component>
			''')
				node.append(codeFormatSettings)
        		}
		}
	}
}

// Exclude resource directories from compilation and add them back in as classpath resources
idea {
	project {
		ipr {
			withXml { provider ->
				def node = provider.asNode()
				def compilerConfig = node.component.find { it.'@name' == 'CompilerConfiguration' }
				def exclude = compilerConfig.appendNode('excludeFromCompile')
				Collection resourceDirs = groovyProjects().collect { project -> project.sourceSets*.resources*.srcDirs }.flatten()

				resourceDirs.each {
				exclude.appendNode('directory', [url: "file://\$PROJECT_DIR\$/${rootProject.relativePath(it)}", includeSubdirectories: true])
				}
			}
		}
	}

}


def groovyProjects() {
    subprojects.findAll { project -> project.name != 'docs' }
}
*/
